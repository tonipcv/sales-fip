// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model WhatsappLead {
  id           String   @id @default(cuid())
  whatsapp     String
  source       String   // 'funil', 'cronograma', etc
  country      String?  // Código do país detectado
  utm_source   String?
  utm_medium   String?
  utm_campaign String?
  utm_content  String?
  utm_term     String?
  createdAt    DateTime @default(now())
  checked      Boolean  @default(false)

  @@map("whatsapp_leads")
}

model WaitingList {
  id        String   @id @default(cuid())
  whatsapp  String
  source    String   // 'encerrado', etc
  createdAt DateTime @default(now())
  checked   Boolean  @default(false)

  @@map("waiting_list")
}

// Nova tabela para os leads do quiz
model QuizLead {
  id           String   @id @default(cuid())
  name         String
  email        String
  whatsapp     String
  capital      String
  utm_source   String?
  utm_medium   String?
  utm_campaign String?
  utm_content  String?
  utm_term     String?
  createdAt    DateTime @default(now())
  checked      Boolean  @default(false)

  @@map("quiz_leads")
}

model CallLiberacao {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  os        String   @db.VarChar(10)  // 'android' ou 'iphone'
  meta      String   @db.VarChar(10)  // '10k', '50k', '100k', '100k+'
  createdAt DateTime @default(now()) @db.Timestamp(6)
  checked   Boolean  @default(false)

  @@index([email])
  @@index([createdAt])
  @@map("call_liberacao")
}

model ProtectionFormLead {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(255)
  email     String   @db.VarChar(255)
  whatsapp  String   @db.VarChar(20)
  utm_source   String?
  utm_medium   String?
  utm_campaign String?
  utm_content  String?
  utm_term     String?
  createdAt DateTime @default(now()) @db.Timestamp(6)
  checked   Boolean  @default(false)

  @@index([email])
  @@index([whatsapp])
  @@index([createdAt])
  @@map("protection_form_leads")
}

model GiftFormLead {
  id           String   @id @default(cuid())
  name         String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  whatsapp     String   @db.VarChar(20)
  utm_source   String?
  utm_medium   String?
  utm_campaign String?
  utm_content  String?
  utm_term     String?
  // Campos do quiz
  gender       String?  @db.VarChar(20)
  age          String?  @db.VarChar(10)  // Mudado para String para aceitar faixas etárias
  market_level String?  @db.VarChar(50)
  net_worth    String?  @db.VarChar(50)
  is_premium   Boolean  @default(false)
  interested   Boolean  @default(false)
  createdAt    DateTime @default(now()) @db.Timestamp(6)
  checked      Boolean  @default(false)

  @@index([email])
  @@index([whatsapp])
  @@index([createdAt])
  @@map("gift_form_leads")
}

model CriptoWhatsappLead {
  id        String   @id @default(cuid())
  whatsapp  String   @unique
  createdAt DateTime @default(now())
  checked   Boolean  @default(false)

  @@map("cripto_whatsapp_leads")
}

model CursoWebLead {
  id        String   @id @default(cuid())
  whatsapp  String   @unique
  createdAt DateTime @default(now())
  checked   Boolean  @default(false)

  @@map("curso_web_leads")
}

model UserSubmission {
  id             String   @id @default(cuid())
  name           String   @db.VarChar(255)
  email          String   @db.VarChar(255)
  phone          String   @db.VarChar(20)
  acceptedTerms  Boolean  @default(true)
  termsAcceptedAt DateTime @default(now())
  ipAddress      String   @db.VarChar(50)
  userAgent      String   @db.Text
  utm_source     String?
  utm_medium     String?
  utm_campaign   String?
  utm_content    String?
  utm_term       String?
  createdAt      DateTime @default(now())
  checked        Boolean  @default(false)

  @@index([email])
  @@index([phone])
  @@index([createdAt])
  @@map("user_submissions")
}

model Partner {
  id              String   @id @default(cuid())
  name            String   @db.VarChar(255)
  hotmartEmail    String   @db.VarChar(255)
  purchaseEmail   String   @db.VarChar(255)
  whatsapp        String   @db.VarChar(20)
  instagram       String   @db.VarChar(100)
  marketingMethod String   @db.Text
  utm_source      String?
  utm_medium      String?
  utm_campaign    String?
  utm_content     String?
  utm_term        String?
  ipAddress       String?  @db.VarChar(50)
  userAgent       String?  @db.Text
  createdAt       DateTime @default(now()) @db.Timestamp(6)
  approved        Boolean  @default(false)

  @@index([hotmartEmail])
  @@index([whatsapp])
  @@index([createdAt])
  @@map("partners")
} 

model TestUser {
  id              String    @id @default(cuid())
  email           String    @unique
  phone           String
  password        String
  operatingSystem String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
} 

// Members for automation test - referrals and coupons
model Member {
  id           String    @id @default(cuid())
  name         String
  whatsapp     String    @unique
  referralCode String    @unique
  createdAt    DateTime  @default(now())

  coupons      Coupon[]
  referredBy   Referral[] @relation("Referrer")
  referrals    Referral[] @relation("Referred")

  @@map("members")
}

model Coupon {
  id        String    @id @default(cuid())
  code      String    @unique
  owner     Member    @relation(fields: [ownerId], references: [id])
  ownerId   String
  usedAt    DateTime?
  createdAt DateTime  @default(now())

  @@index([ownerId])
  @@map("coupons")
}

model Referral {
  id         String   @id @default(cuid())
  referrer   Member?  @relation("Referrer", fields: [referrerId], references: [id])
  referrerId String?
  referred   Member   @relation("Referred", fields: [referredId], references: [id])
  referredId String
  createdAt  DateTime @default(now())

  @@index([referrerId])
  @@index([referredId])
  @@unique([referrerId, referredId])
  @@map("referrals")
}